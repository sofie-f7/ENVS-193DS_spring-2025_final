---
title: "ENVS 193DS Final"
author: "Sofie Flom"
date: "8 June 2025"
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---
[Repo link](https://github.com/sofie-f7/ENVS-193DS_spring-2025_final)

```{r packages-and-data, message=FALSE}
library(tidyverse) # general use
library(here) # file organization
library(janitor) # cleaning data frames

sst <- read_csv(here("data", "SST_update2023.csv")) #read in Santa Barbara SST data in data folder

```

# Problem 1. 

## a. 

In part 1, they used a Pearson's r test. In part 2, they used an analysis of variance (one-way ANOVA) test. 

## b. 

One additional piece of information that should be included is the significance level that was used to compare the p-value. This would add useful additional context because it provides more transparency to the test that was done and tells how strict the test was.
Another test that should be included is Tukey's HSD. This would be useful because it would explain which sources are actually statistically different in mean nitrogen load from each other when you compare them. The ANOVA test result says that at least one group is significantly different, but not which one(s). 

## c. 

We rejected the null hypothesis that there is no correlation between distance from headwater (km) and annual total nitrogen load (kg year-1) (Pearson's r = **correlation coefficient**, p = 0.03, $\alpha$ = **significance level**).

We rejected the null hypothesis that there is no difference in average nitrogen load (kg year-1) between sources (n = sample sizes) (urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands) (one-way ANOVA, F(**among groups df, within groups df**) = **F-statistic**, p = 0.02, $\alpha$ = **significance level**). We found a ___ effect ($\eta^2$ = **effect size**) of nitrogen source on nitrogen load. On average, **source type** tended to have smaller/larger nitrogen loads than **source type** (**Tukey's HSD**).

# Problem 2.

## a. 

```{r cleaning-and-summarizing}
sst_clean <- sst |> #create new sst_clean dataframe from sst dataframe
  select(-site, -latitude, -longitude) |> #remove site, latitude, and longitude columns
  filter(date > as_date("2017-12-31")) |> #only include dates after 2017
  mutate(month = factor(month(date, label = TRUE, abbr = TRUE), #extract month from the date column and set as factor
                      levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
                                 "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")), #set month as ordered factor with these levels
         year = factor(as.character(year(date)), #set year as factor and extract year from the date column
                       levels = c("2018", "2019", "2020", "2021", "2022", "2023"))) |> 
  group_by(year, month) |> #group by months
  summarize(mean_monthly_sst = mean(temp)) |> #calculate the monthly mean sst 
  ungroup() #ungroup 

```

```{r}
slice_sample(sst_clean, n = 5) #display 5 rows from sst_clean
```

```{r}
str(sst_clean) #display structure of sst_clean
```

## b. 

```{r visualize-data}
ggplot(data = sst_clean, #use the sst_clean dataframe
       aes(x = month, #make the x-axis the month
           y = mean_monthly_sst), #make the y-axis the mean monthly sst
           color = year) + #color by the year
  geom_point() + #add points
  geom_line(aes(group = year, color = year)) + #add a line for each year and color by year
  labs(x = "Month", #rename the x-axis
       y = "Mean monthly sea surface temperature (Â°C)", #rename the y-axis
       color = "Year") + #name the legend
  theme(panel.background = element_blank(), #make the panel background blank
        legend.position = c(0.05, 0.95), #position the legend inside the plot
        panel.grid = element_blank(), #remove the gridlines
        legend.justification = c("left", "top"), #align the legend to top left
        panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5)
) + #add a panel border
  scale_color_manual(values = c("2018" = "#deebf7", #change color of 2018 line
                                "2019" = "#c6dbef", #change color of 2019 line
                                "2020" = "#9ecae1", #change color of 2020 line
                                "2021" = "#6baed6", #change color of 2021 line
                                "2022" = "#3182bd", #change color of 2022 line
                                "2023" = "#08519c")) #change color of 2023 line

```

